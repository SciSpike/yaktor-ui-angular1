#!/usr/bin/env node

var fs = require('fs'),
    path = require('path'),
    parse = require('../lib/parse'),
    prettyjson = require('prettyjson');
    argv = require('optimist')
      .demand('n')
      .argv;
checkArguments(argv)

// Search for the most shallow occurance of stateMatrix on an object
var stateMatrix;
function crawlForStateMatrix(obj) {
  if ( obj.hasOwnProperty('stateMatrix') ) {
    stateMatrix = obj.stateMatrix;
    return;
  }
  
  for (var key in obj) {
    crawlForStateMatrix(obj[key]);
  }
}

function checkArguments(args) {
  
  if (args.hasOwnProperty('s')) {
  
    // Create a UI model from a SciSpike State Matrix and pass to json2angular.
    var allInOne = require(path.join(process.cwd(), args.s));
    
    crawlForStateMatrix(allInOne);
    var model = parse.fromStateMatrix(args.n, stateMatrix);
  } else if (args.hasOwnProperty('d')) {
  
    // Create a UI model from SciSpike views and pass to json2angular.
    var views = require('../lib/driver').crawlForViews(args.d);
    var model = parse.fromViews(args.n, views);
    
  } else {
    return false;
  }
  require('../lib/json2angular').exec(model);
  return true;
}